// ----------------------------------------------------------------------

// Grids

// ----------------------------------------------------------------------

////
/// @author Sean Kelly
/// @group grids
////

/// Dynamically create grid layouts using CSS grid.
@mixin display-grid {
  display: -ms-grid;
  display: grid;
}

/// $columns values should be delimited by a space
/// @param {type} $columns [must supply (ex: auto)] - adds column templates
@mixin grid-template-columns($columns...) {
  -ms-grid-columns: $columns;
  grid-template-columns: $columns;
}

/// $rows values should be delimited by a space
/// @param {type} $rows [must supply (ex: auto)] - adds row templates
@mixin grid-template-rows($rows...) {
  -ms-grid-rows: $rows;
  grid-template-rows: $rows;
}

/// adds media query for 440 - 720
///
/// $columns values should be delimited by a space
/// @param {type} $min [440px] - min value for media query
/// @param {type} $max [720px] - max value for media query
/// @param {type} $columns [must supply (ex: auto)] - adds row templates
@mixin grid-column-media($min: "440px", $max: "720px", $columns...) {
  @media only screen and (min-width: $min) and (max-width: $max) {
    @include grid-template-columns($columns);
  }
}

/// adds vertical alignment for grid element
/// @param {type} $value [auto] - set align-self:
@mixin grid-align-self($value: "auto") {
  -ms-grid-row-align: $value;
  align-self: $value;
}

/// adds horizontal alignment for grid element
/// @param {type} $value [auto] - set justify-self:
@mixin grid-justify-self($value) {
  -ms-grid-column-align: $value;
  justify-self: $value;
}

/// adds autoprefixing support for columns. IE with grid children
@mixin grid-col-child() {
  @for $i from 1 to 7 {
    .grid--child-#{$i} {
      grid-column: $i;
    }
  }

  @media only screen and (max-width: 440px) {
    @for $i from 1 to 7 {
      .grid--child-#{$i} {
        grid-column: 1;
      }
    }
  }
}

/// adds autoprefixing support for rows. IE with grid children
@mixin grid-row-child() {
  @for $i from 1 to 7 {
    .grid--child-row-#{$i} {
      grid-row: $i;
    }
  }

  @media only screen and (max-width: 440px) {
    @for $i from 1 to 7 {
      .grid--child-row-#{$i} {
        grid-row: auto;
      }
    }
  }
}
